"use client";

import React, { useState, useEffect } from "react";
import { useRouter } from "next/navigation";
import { useCommon } from "../../../contexts/commonContext";
import Link from "next/link";

// „Éâ„É≠„ÉÉ„Éó„ÉÄ„Ç¶„É≥È†ÖÁõÆ„ÅÆÂûã
interface DropdownItem {
  id: string;
  name: string;
}

type DropdownProps = {
  label: string;
  items: DropdownItem[];
  onSelect: (id: string) => void;
};

//„Éâ„É≠„ÉÉ„Éó„ÉÄ„Ç¶„É≥
const Dropdown: React.FC<DropdownProps> = ({ label, items, onSelect }) => {
  const [isOpen, setIsOpen] = useState(false);
  const [selectedItem, setSelectedItem] = useState<string | null>(null);

  const toggleDropdown = () => setIsOpen(!isOpen);

  const handleSelect = (id: string, name: string) => {
    setSelectedItem(name);
    setIsOpen(false);
    onSelect(id);
  };

  return (
    <div className="relative">
      <button
        onClick={toggleDropdown}
        className="w-full px-20 py-5 bg-white rounded-lg shadow text-gray-700 font-semibold flex justify-between items-center"
      >
        {selectedItem || label}
        <span>{isOpen ? "‚ñ≤" : "‚ñº"}</span>
      </button>

      {isOpen && (
        <div className="absolute top-full left-0 w-full bg-white rounded-lg shadow mt-2 z-10">
          <ul>
            {items.map((item) => (
              <li
                key={item.id}
                onClick={() => handleSelect(item.id, item.name)}
                className="p-4 border-b border-gray-200 hover:bg-gray-500 hover:text-white cursor-pointer"
              >
                {item.name}
              </li>
            ))}
          </ul>
        </div>
      )}
    </div>
  );
};

const Itnavi: React.FC = () => {
  const router = useRouter();
  const { common } = useCommon();
  const [cases, setCases] = useState<{ id: number; title: string; description: string }[]>([]); // Ë°®Á§∫Áî®„Éá„Éº„Çø

  // üîπ useEffectÂÜÖ„Åßsearch_id„ÇíÂÖÉ„Å´„Çµ„É≥„Éó„É´„Éá„Éº„ÇøÂèñÂæó
  useEffect(() => {
    if (common?.search_id) {
      const { industry_id, company_size_id, department_id, theme_id } = common.search_id;

      console.log("ÈÅ∏ÊäûID:", industry_id, company_size_id, department_id, theme_id);

      // üî∏ Êù°‰ª∂„Å´Âøú„Åò„Åü„ÉÄ„Éü„Éº„Éá„Éº„ÇøÔºàÊú¨Êù•„ÅØAPIÔºâ
      const sampleData = [
        {
          id: 1,
          title: "„ÇØ„É©„Ç¶„ÉâERPÂ∞éÂÖ•„Å´„Çà„ÇãÊ•≠ÂãôÂäπÁéáÂåñ„Å®„Éá„Éº„ÇøÊ¥ªÁî®",
          description: "Ë£ΩÈÄ†„ÉªË≤©Â£≤„ÉªÂú®Â∫´„Éª‰ºöË®à„Å™„Å©„ÅÆÊ•≠Âãô„Ç∑„Çπ„ÉÜ„É†„Çí„ÇØ„É©„Ç¶„ÉâERP„Å´Áµ±Âêà„Åó„ÄÅ„É™„Ç¢„É´„Çø„Ç§„É†„ÅÆ„Éá„Éº„ÇøÊ¥ªÁî®„Å®Ê•≠ÂãôÂäπÁéáÂåñ„ÇíÂÆüÁèæ",
        },
        {
          id: 2,
          title: "„Çº„É≠„Éà„É©„Çπ„Éà„Çª„Ç≠„É•„É™„ÉÜ„Ç£„ÅÆÂ∞éÂÖ•„Å´„Çà„ÇãÊÉÖÂ†±ÊºèÊ¥©ÂØæÁ≠ñ",
          description: "Á§æÂÜÖÂ§ñ„Åã„Çâ„ÅÆ„Ç¢„ÇØ„Çª„Çπ„Çí„Çº„É≠„Éà„É©„Çπ„Éà„É¢„Éá„É´„Å´ÁßªË°å„Åó„ÄÅ„Çª„Ç≠„É•„É™„ÉÜ„Ç£„É™„Çπ„ÇØ„ÇíÊúÄÂ∞èÂåñ",
        },
        {
          id: 3,
          title: "BI„ÉÑ„Éº„É´Â∞éÂÖ•„Å´„Çà„ÇãÁµåÂñ∂„Éá„Éº„Çø„ÅÆÂèØË¶ñÂåñ",
          description: "ÁµåÂñ∂Â±§Âêë„Åë„ÅÆBI„ÉÄ„ÉÉ„Ç∑„É•„Éú„Éº„Éâ„ÇíÊßãÁØâ„Åó„ÄÅ„É™„Ç¢„É´„Çø„Ç§„É†„Åß„ÅÆÊÑèÊÄùÊ±∫ÂÆö„ÇíÂèØËÉΩ„Å´",
        },
      ];

      // üî∏ Êù°‰ª∂„Å´„Çà„Å£„Å¶Áµû„ÇäËæº„ÅøÔºà‰ªäÂõû„ÅØÂÖ®‰ª∂Ë°®Á§∫Ôºâ
      setCases(sampleData);
    }
  }, [common]);

  const [isSearchBtnHover, setIsSearchBtnHover] = useState(false);
  const [isHomeHover, setIsHomeHover] = React.useState(false);
  const [isSearchHover, setIsSearchHover] = React.useState(false);
  const [isUserHover, setIsUserHover] = React.useState(false);

  const [industryId, setIndustryId] = useState("");
  const [companySizeId, setCompanySizeId] = useState("");
  const [departmentId, setDepartmentId] = useState("");
  const [themeId, setThemeId] = useState("");

  const handleGoClick = () => {
    const searchParams = new URLSearchParams({
      industry_id: industryId,
      company_size_id: companySizeId,
      department_id: departmentId,
      theme_id: themeId,
    });
    router.push(`/f3?${searchParams.toString()}`);
  };

  const handleDtlClick = () => {
    router.push("/f4");
  };

  return (
    <>
      <header className="px-29 py-5 flex justify-between items-center border-b border-white">
        {/* „É≠„Ç¥ÈÉ®ÂàÜ */}
        <div className="flex items-center">
          <img src="/logo.png" alt="IT Trip Navigator „É≠„Ç¥" className="h-20 w-48"/>
        </div>
        {/* „Éä„Éì„É°„Éã„É•„Éº */}
        <nav>
          <ul className="flex space-x-12 text-white items-center">
            <li className="flex flex-col items-center ">
              <Link href="/" className="flex flex-col items-center hover:text-gray-500"
                onMouseEnter={() => setIsHomeHover(true)}
                onMouseLeave={() => setIsHomeHover(false)}
              >
                <img 
                  src={isHomeHover ? "/icon-home-hover.png" : "/icon-home.png"}
                  alt="„Éõ„Éº„É†" 
                  className="h-6 w-6 mb-1" />
                <span className="text-sm font-bold">„Éõ„Éº„É†</span>
              </Link>
            </li>
            <li className="flex flex-col items-center">
              <Link href="/f2" className="flex flex-col items-center hover:text-gray-500"
                onMouseEnter={() => setIsSearchHover(true)}
                onMouseLeave={() => setIsSearchHover(false)}
              >
                <img 
                  src={isSearchHover ? "/icon-search-hover.png" : "/icon-search.png"}
                  alt="‰∫ã‰æãÊ§úÁ¥¢" 
                  className="h-6 w-6 mb-1" />
                <span className="text-sm font-bold">‰∫ã‰æãÊ§úÁ¥¢</span>
              </Link>
            </li>
            <li className="flex flex-col items-center">
              <Link href="/f7" className="flex flex-col items-center hover:text-gray-500"
                onMouseEnter={() => setIsUserHover(true)}
                onMouseLeave={() => setIsUserHover(false)}
              >
                <img 
                  src={isUserHover ? "/icon-user-hover.png" : "/icon-user.png"}
                  alt="‰∫∫Âì°TOP" 
                  className="h-6 w-6 mb-1" />
                <span className="text-sm font-bold">‰∫∫Âì°TOP</span>
              </Link>
            </li>
          </ul>
        </nav>
      </header>

      <section className="px-29 py-8 max-w-7xl mx-auto">
        <h2 className="text-3xl font-bold text-gray-800 mb-8">‰∫ã‰æã‰∏ÄË¶ß</h2>
        <div className="flex flex-col md:flex-row gap-8">
          {/* Â∑¶ÂÅ¥Ôºö„Ç´„Çπ„Çø„É†„Éó„É´„ÉÄ„Ç¶„É≥4„Å§ */}
          <div className="flex flex-col gap-4 w-full md:w-1/2">
            <Dropdown label="Ê•≠Áïå„ÇíÊåáÂÆö„Åô„Çã" onSelect={setIndustryId} items={[
              { id: "1", name: "Ë£ΩÈÄ†Ê•≠" },
              { id: "2", name: "ÊµÅÈÄö„ÉªÂ∞èÂ£≤Ê•≠" },
              { id: "3", name: "Âª∫Ë®≠‰∏çÂãïÁî£Ê•≠" },
              { id: "4", name: "ÊåáÂÆö„Å™„Åó" },
            ]} />
            <Dropdown label="Â£≤‰∏äË¶èÊ®°„ÇíÊåáÂÆö„Åô„Çã" onSelect={setCompanySizeId} items={[
              { id: "1", name: "„Äú50ÂÑÑÂÜÜ" },
              { id: "2", name: "50ÂÑÑÂÜÜ„Äú100ÂÑÑÂÜÜ" },
              { id: "3", name: "ÊåáÂÆö„Å™„Åó" },
            ]} />
            <Dropdown label="ÈÉ®ÁΩ≤„ÇíÊåáÂÆö„Åô„Çã" onSelect={setDepartmentId} items={[
              { id: "1", name: "ÊÉÖÂ†±„Ç∑„Çπ„ÉÜ„É†ÈÉ®" },
              { id: "2", name: "‰∫∫‰∫ãÈÉ®" },
              { id: "3", name: "ÊåáÂÆö„Åó„Å™„ÅÑ" },
            ]} />
            <Dropdown label="„ÉÜ„Éº„Éû„ÇíÊåáÂÆö„Åô„Çã" onSelect={setThemeId} items={[
              { id: "1", name: "DX" },
              { id: "2", name: "IT„Ç§„É≥„Éï„É©" },
              { id: "3", name: "ÊåáÂÆö„Åó„Å™„ÅÑ" },
            ]} />
            {/* Ê§úÁ¥¢„Éú„Çø„É≥ */}
            <button
              onClick={handleGoClick}
              onMouseEnter={() => setIsSearchBtnHover(true)}
              onMouseLeave={() => setIsSearchBtnHover(false)}
              className={`flex items-center justify-center p-4 rounded-lg shadow font-semibold border-3 w-full md:w-auto 
                ${isSearchBtnHover ? "bg-gray-500 text-white" : "bg-white text-gray-500"} border-gray-500`}
            >
              <img
                src={isSearchBtnHover ? "/icon-searchbtn-hover.png" : "/icon-searchbtn.png"}
                alt="Ê§úÁ¥¢"
                className="w-5 h-5 mr-2"
              />
              ‰∫ã‰æã„ÇíÊ§úÁ¥¢„Åô„Çã
            </button>
            
          </div>

          {/* Âè≥ÂÅ¥Ôºö‰∫ã‰æã‰∏ÄË¶ßÔºà„Çµ„É≥„Éó„É´„Éá„Éº„Çø„ÇíË°®Á§∫‰∏≠Ôºâ */}
          <div className="flex flex-col gap-4 w-full md:w-1/2">
            {cases.length > 0 ? (
              cases.map((item) => (
                <div key={item.id} className="bg-white p-6 rounded-lg shadow">
                  <h3 className="text-xl font-bold mb-2">{item.title}</h3>
                  <p className="text-sm text-gray-700 mb-2">{item.description}</p>
                  <p
                    className="text-right text-xs text-gray-400 mt-4 cursor-pointer hover:underline"
                    onClick={handleDtlClick}
                  >
                    Á∂ö„Åç„ÇíË™≠„ÇÄ
                  </p>
                </div>
              ))
            ) : (
              <p className="text-gray-500">Ë©≤ÂΩì„Åô„Çã‰∫ã‰æã„ÅØ„ÅÇ„Çä„Åæ„Åõ„Çì„ÄÇ</p>
            )}
          </div>
        </div>
      </section>
    </>
  );
};

export default Itnavi;
